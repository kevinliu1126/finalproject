{"version":3,"sources":["fire.js","components/testLogin.js","components/Input.js","components/login.js","components/SignUp.js","image/64495434_p0.jpg","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","LoginTest","props","email","setEmail","password","setPassword","handleLogin","emailError","handleSignup","hasAccount","setHasAccount","passwordError","className","type","autoFocus","required","value","onChange","e","target","onClick","WhiteTextTypography","withStyles","root","color","Typography","WhiteTextField","TextField","DAddLocationIcon","AddLocationIcon","Copyright","variant","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","success","light","form","width","submit","Input","handleLogout","classes","Container","component","maxWidth","CssBaseline","Avatar","noValidate","Grid","container","item","xs","autoComplete","name","fullWidth","id","label","Button","Box","mt","Checkbox","FormControlLabel","LockOutlinedIcon","sectionStyle","height","backgroundRepeat","backgroundImage","Background","App","useState","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","auth","onAuthStateChanged","useEffect","style","signOut","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.069f01cb.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDBdH6lvy1G17lk0MNsgibJZ3M4hTrtiMY\",\r\n    authDomain: \"final-73099.firebaseapp.com\",\r\n    projectId: \"final-73099\",\r\n    storageBucket: \"final-73099.appspot.com\",\r\n    messagingSenderId: \"1035242910845\",\r\n    appId: \"1:1035242910845:web:c2bac46ec6a1b165856d14\"\r\n  };\r\n  // Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n  \r\nexport default fire;","import React from 'react';\r\n\r\nconst LoginTest = (props) => {\r\n    const { email, setEmail, password, setPassword, handleLogin, handleSignup, hasAccount, setHasAccount, emailError, passwordError } = props;\r\n\r\n    return (\r\n        <section className=\"login\">\r\n            <div className=\"loginContainer\">\r\n                <label>Username</label>\r\n                <input\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    required\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <p className=\"errorMsg\">{emailError}</p>\r\n                <label>Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    autoFocus\r\n                    required\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <p className=\"errorMsg\">{passwordError}</p>\r\n                <button onClick={handleLogin}>\r\n                    signup\r\n                </button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default LoginTest;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst WhiteTextTypography = withStyles({\r\n    root: {\r\n      color: \"white\"\r\n    }\r\n  })(Typography);\r\n  \r\nconst WhiteTextField = withStyles({\r\n    root: {\r\n        '& .MuiInputBase-root': {\r\n        color: 'white'\r\n        },\r\n        '& .MuiInputLabel-root': {\r\n        color: 'white'\r\n        },\r\n    },\r\n})(TextField);\r\n  \r\nconst DAddLocationIcon = withStyles({\r\n    root:{\r\n        color: 'white'\r\n    },\r\n})(AddLocationIcon)  \r\n\r\nfunction Copyright() {\r\n    return (\r\n        <WhiteTextTypography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"red\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </WhiteTextTypography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(0),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.success.light,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction Show() {\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <WhiteTextField\r\n                autoComplete=\"city\"\r\n                name=\"city\"\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"city\"\r\n                label=\"City\"\r\n                autoFocus\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <WhiteTextField\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"dist\"\r\n                name=\"dist\"\r\n                label=\"Dist\"\r\n                autoComplete=\"dist\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <WhiteTextField\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"shopName\"\r\n                label=\"shop name\"\r\n                name=\"shopName\"\r\n                autoComplete=\"shopName\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <WhiteTextField\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"date\"\r\n                type=\"datetime-local\"\r\n                id=\"date\"\r\n                autoComplete=\"current-password\"\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\nexport default function Input({handleLogout}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <DAddLocationIcon />\r\n                    </Avatar>\r\n                    <WhiteTextTypography component=\"h1\" variant=\"h5\">\r\n                        Where You Been\r\n                    </WhiteTextTypography>\r\n                    <form className={classes.form} noValidate>\r\n                        {Show()}\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            >\r\n                            Submit\r\n                        </Button>\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={handleLogout}\r\n                            >\r\n                            logout\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            <Box mt={2}>\r\n            <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst WhiteTextTypography = withStyles({\r\n  root: {\r\n    color: \"white\"\r\n  }\r\n})(Typography);\r\n\r\nconst WhiteCheckbox = withStyles({\r\n  root: {\r\n    color: \"white\"\r\n  }\r\n})(Checkbox);\r\n\r\nconst WhiteTextField = withStyles({\r\n  root: {\r\n    '& .MuiInputBase-root': {\r\n      color: 'white'\r\n    },\r\n    '& .MuiInputLabel-root': {\r\n      color: 'white'\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst WhiteFormControlLabel = withStyles({\r\n  root: {\r\n    '& .MuiFormControlLabel-label': {\r\n      color: 'white'\r\n    },\r\n  },\r\n})(FormControlLabel);\r\n\r\nconst DLockOutlinedIcon = withStyles({\r\n  root:{\r\n    color: 'white'\r\n  },\r\n})(LockOutlinedIcon)\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <WhiteTextTypography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"red\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </WhiteTextTypography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.success.light,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignIn = (props) => {\r\n  const classes = useStyles();\r\n  const { email, setEmail, password, setPassword, handleLogin, handleSignup, hasAccount, setHasAccount, emailError, passwordError } = props;\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <DLockOutlinedIcon />\r\n        </Avatar>\r\n        <WhiteTextTypography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </WhiteTextTypography>\r\n        <form className={classes.form} noValidate>\r\n          <WhiteTextField\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            autoFocus\r\n          />\r\n          <p className=\"errorMsg\">{emailError}</p>\r\n          <WhiteTextField\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <p className=\"errorMsg\">{passwordError}</p>\r\n          <WhiteFormControlLabel\r\n            control={<WhiteCheckbox value=\"remember\"/>}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleLogin}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\" color=\"white\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/signup\" variant=\"body2\" color=\"white\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\nexport default SignIn;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst WhiteTextTypography = withStyles({\r\n    root: {\r\n      color: \"white\"\r\n    }\r\n  })(Typography);\r\n  \r\n  const WhiteCheckbox = withStyles({\r\n    root: {\r\n      color: \"white\"\r\n    }\r\n  })(Checkbox);\r\n  \r\n  const WhiteTextField = withStyles({\r\n    root: {\r\n      '& .MuiInputBase-root': {\r\n        color: 'white'\r\n      },\r\n      '& .MuiInputLabel-root': {\r\n        color: 'white'\r\n      },\r\n    },\r\n  })(TextField);\r\n  \r\n  const WhiteFormControlLabel = withStyles({\r\n    root: {\r\n      '& .MuiFormControlLabel-label': {\r\n        color: 'white'\r\n      },\r\n    },\r\n  })(FormControlLabel);\r\n  \r\n  const DLockOutlinedIcon = withStyles({\r\n    root:{\r\n      color: 'white'\r\n    },\r\n  })(LockOutlinedIcon)  \r\n\r\n  function Copyright() {\r\n    return (\r\n      <WhiteTextTypography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"red\" href=\"https://material-ui.com/\">\r\n          Your Website\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </WhiteTextTypography>\r\n    );\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(0),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.success.light,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nfunction show() {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} sm={6}>\r\n        <WhiteTextField\r\n          autoComplete=\"fname\"\r\n          name=\"firstName\"\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"firstName\"\r\n          label=\"First Name\"\r\n          autoFocus\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <WhiteTextField\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"lastName\"\r\n          label=\"Last Name\"\r\n          name=\"lastName\"\r\n          autoComplete=\"lname\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <WhiteTextField\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <WhiteTextField\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <WhiteFormControlLabel\r\n          control={<WhiteCheckbox value=\"allowExtraEmails\" />}\r\n          label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default function SignUpSide() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <DLockOutlinedIcon />\r\n        </Avatar>\r\n        <WhiteTextTypography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </WhiteTextTypography>\r\n        <form className={classes.form} noValidate>\r\n          {show()}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/64495434_p0.79a4da9e.jpg\";","import './App.css';\nimport { useState, useEffect } from 'react';\nimport fire from './fire'\nimport LoginTest from './components/testLogin'\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport Input from \"./components/Input\";\nimport SignIn from './components/login';\n// import CheckBox from './components/checkbox';\nimport SignUpSide from './components/SignUp';\n// import ForgetPassword from './components/forgotpassword';\nimport Background from './image/64495434_p0.jpg';\nvar sectionStyle = {\n  height : '100vh',\n  backgroundRepeat: 'no-repeat',\n// makesure here is String确保这里是一个字符串，以下是es6写法\n  backgroundImage: `url(${Background})` \n};\n\nconst App = () => {\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () => {\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return (\n    <div className=\"App\">\n      {user ? (\n        <div style={sectionStyle}>\n          <Input handleLogout={handleLogout}/>\n        </div>\n        // window.location.replace(\"HTTP://www.google.com\")\n      ): (\n        <LoginTest\n          email={email}\n          setEmail={setEmail}\n          password={password}\n          setPassword={setPassword}\n          handleLogin={handleLogin}\n          handleSignup={handleSignup}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n        />\n      )}\n    </div>\n    // <div className=\"App\">\n    //   <Router>\n    //     <Switch>\n    //         {/* <Route exact path=\"/\">\n    //           <Login />\n    //         </Route> */}\n    //         <Route path=\"/login\">\n    //         <div style={sectionStyle}>\n    //           <SignIn\n    //             email={email}\n    //             setEmail={setEmail}\n    //             password={password}\n    //             setPassword={setPassword}\n    //             handleLogin={handleLogin}\n    //             handleSignup={handleSignup}\n    //             hasAccount={hasAccount}\n    //             setHasAccount={setHasAccount}\n    //             emailError={emailError}\n    //             passwordError={passwordError}\n    //           />\n    //         </div>\n    //         </Route>\n    //         <Route path=\"/input\">\n    //         <div style={sectionStyle}>\n    //           <Input handleLogout={handleLogout}/>\n    //         </div>\n    //         </Route>\n    //       <Route path=\"/signup\">\n    //         <div style={sectionStyle}>\n    //           <SignUpSide />\n    //         </div>\n    //         </Route>\n    //         {/* <Route path=\"/forgetpassword\">\n    //           <ForgetPassword />\n    //         </Route> */}\n    //     </Switch>\n    //   </Router>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}